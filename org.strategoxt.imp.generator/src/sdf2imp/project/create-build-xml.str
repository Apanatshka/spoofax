module project/create-build-xml

imports
  sdf2imp/util/-

strategies

  // TODO: create proper build.xml

  create-build-xml =
    <file-exists> "build.xml"
  <+
    name       := <get-sdf-main-module>;
    classname  := <get-main-class-name>;
    pkgname    := <BasePackage <+ default-package-name>;
    
    <output-xml-file(|[], "build.xml")>
    %>
    <?xml version="1.0" encoding="UTF-8"?>
    <project name="= name " default="buildAll">
    
        <!-- Project configuration -->
        <property name="trans" location="trans"/>
        <property name="editor" location="editor"/>
        <property name="syntax" location="syntax"/>
        <property name="build" location="bin"/>
        <property name="dist" location="bin/dist"/>
        
        <!-- System configuration -->
        <property name="strategoBinariesLocation" location="${user.home}/.nix-profile/bin"/>
        <property name="scriptsLocation" location="aux"/>
        <property name="customImports" value="-I ${src} -I ${src}/detection -I ${src}/statistics -I ${src}/utils  -I ${src}/syntax -I ${lib}/apath -I ${lib}/apath/syntax"/>
        
        <target name="init">
            <mkdir dir="${build}"/>
            <mkdir dir="${dist}"/>
        </target>
    
        <target name="buildAll">
            <parallel>
                <antcall target="strc"/>
                <antcall target="sdf2table"/>
            </parallel>
        </target>
    
        <target name="pack-sdf" depends="init">
            <apply executable="${strategoBinariesLocation}/pack-sdf" dest="${build}" failonerror="true">
                <arg value="-i"/>
                <srcfile/>
                <arg value="-o"/>
                <targetfile/>
                <arg value="-I"/>
                <arg value="${lib}"/>
                <arg line="${customImports}"/>
                <fileset dir="${src}/syntax" includes="*.sdf"/>
                <mapper type="glob" from="*.sdf" to="*.def"/>
            </apply>
        </target>
    
        <target name="sdf2table" depends="init,pack-sdf">
            <apply executable="${scriptsLocation}/applyUsingBasename" dest="${dist}" failonerror="true">
                <srcfile/>
                <arg value=".def"/>
                <arg value="-i"/>
                <arg value="-m"/>
                <arg value="${strategoBinariesLocation}/sdf2table"/>
                <arg value="-o"/>
                <targetfile/>
                <fileset dir="${build}" includes="*.def"/>
                <mapper type="glob" from="*.def" to="*.tbl"/>
            </apply>
        </target>
    
        <target name="sdf2rtg" depends="init,pack-sdf">
            <apply executable="${scriptsLocation}/applyUsingBasename" dest="${build}" failonerror="true">
                <srcfile/>
                <arg value=".def"/>
                <arg value="-i"/>
                <arg value="-m"/>
                <arg value="${strategoBinariesLocation}/sdf2rtg"/>
                <arg value="-o"/>
                <targetfile/>
                <fileset dir="${build}" includes="*.def"/>
                <mapper type="glob" from="*.def" to="*.rtg"/>
            </apply>
        </target>
    
        <target name="rtg2sig" depends="init,sdf2rtg">
            <apply executable="${scriptsLocation}/applyUsingBasename" dest="${build}" failonerror="true">
                <srcfile/>
                <arg value=".rtg"/>
                <arg value="-i"/>
                <arg value="--module"/>
                <arg value="${strategoBinariesLocation}/rtg2sig"/>
                <arg value="-o"/>
                <targetfile/>
                <fileset dir="${build}" includes="*.rtg"/>
                <mapper type="glob" from="*.rtg" to="*.str"/>
            </apply>
        </target>
    
        <target name="strc" depends="init,rtg2sig">
            <antcall target="strc-call">
                <param name="additionalStrcParameters" value=""/>
                <param name="additionalStrcExtension" value="*"/>
            </antcall>
        </target>
        
        <target name="ctrees" depends="init,rtg2sig">
            <antcall target="strc-call">
                <param name="additionalStrcParameters" value="-F"/>
                <param name="additionalStrcExtension" value="*.ctree"/>
            </antcall>
        </target>
        
        <target name="strc-call" depends="init,rtg2sig">
            <dependset>
                <srcfilelist dir = "${src}" files = "**/*.str"/>
                <srcfilelist dir = "${build}" files = "**/*.str"/>
                <targetfileset dir = "${dist}" includes = "**/*"/>
            </dependset>
            <apply executable="${scriptsLocation}/applyUsingBasename" dest="${dist}" failonerror="true">
                <srcfile/>
                <arg value=".str"/>
                <arg value="-i"/>
                <arg value="-m"/>
                <arg value="${strategoBinariesLocation}/strc"/>
                <arg value="-o"/>
                <targetfile/>
                <arg value="-S"/>    <!-- Silent mode -->
                <arg value="${additionalStrcParameters}"/>    <!-- Used for Ctree generation -->
                <arg value="-I"/>
                <arg value="${build}"/>
                <arg value="-I"/>
                <arg value="${lib}"/>
                <arg value="-I"/>
                <arg value="${user.home}/.nix-profile/share/"/>
                <arg value="-I"/>
                <arg value="${user.home}/.nix-profile/share/java-front"/>
                <arg value="-I"/>
                <arg value="${user.home}/.nix-profile/share/sdf/gpp"/>
                <arg value="-I"/>
                <arg value="${user.home}/.nix-profile/share/sdf/xml-front"/>
                <arg value="-I"/>
                <arg value="${user.home}/.nix-profile/share/sdf/sdf-front"/>
                <arg value="-I"/>
                <arg value="${user.home}/.nix-profile/share/sdf/stratego-front"/>
                <arg value="-la"/>
                <arg value="stratego-lib"/>
                <arg value="-la"/>
                <arg value="${user.home}/.nix-profile/lib/libjava-front.la"/>
                <!--arg value="-la"/>
                <arg value="${user.home}/.nix-profile/lib/libstrc.la"/-->
                <!--arg value="-la"/>
                <arg value="${user.home}/.nix-profile/lib/libstratego-sglr.la"/-->
    
                
                <arg line="${customImports}"/>
                
                <fileset dir="${src}">
                    <include name="**/*.str"/>
                    <exclude name="**/*Lib*"/>
                    <exclude name="**/*lib*"/>
                </fileset>
                <mapper type="glob" from="*.str" to="${additionalStrcExtension}"/>
            </apply>
            <!-- Remove the c files again -->
            <delete>
                <fileset dir="${dist}">
                    <include name="**/*.c"/>
                    <include name="**/*.dep"/>
                    <include name="**/*.lo"/>
                    <include name="**/*.o"/>
                </fileset>
            </delete>
        </target>
        
        <target name="clean" description="clean up" >
            <delete dir="${build}"/>
        </target>
    
        <target name="cleanall" description="clean up" depends="clean" >
            <delete dir="${dist}"/>
        </target>
    </project>
    <%
