module project/create-build-xml

imports
  sdf2imp/util/-

strategies

  create-build-xml =
    <file-exists> "build.xml"
  <+
    name       := <get-sdf-main-module>;
    name'      := <lower-case; cify; string-replace(|"_", "-")> name;
    classname  := <get-main-class-name>;
    pkgname    := <BasePackage <+ default-package-name>;
    
    <output-xml-file(|[], "build.xml")>
    %>
    <?xml version="1.0" encoding="UTF-8"?>
    <project name="<%= name %>" default="standalone">
    
        <!-- Project directories -->
        <property name="trans" location="trans"/>
        <property name="syntax" location="syntax"/>
        <property name="editor" location="editor"/>
        <property name="lib" location="lib"/>
        <property name="build" location="bin"/>
        <property name="dist" location="bin/dist"/>
        
        <!-- Key input modules -->
        <property name="sdfmodule" value="<%= name %>"/>
        <property name="esvmodule" value="<%= name %>"/>
        <property name="strmodule" location="<%= name' %>"/>
	    <available file="${trans}/${strmodule}.str" property="strmodule.present"/>
        
        <!-- Environment configuration -->
        <property name="build.strategoxt" location="${user.home}/.nix-profile/bin"/>
        <property name="build.strategoxt.sdf.imports"  value=""/>
        <property name="build.strategoxt.strc.imports" value=""/>
        
        <!-- Default target for building within Eclipse -->
        <target name="from-eclipse" depends="strc,sdf2table,sdf2imp-eclipse"/>
        
        <!-- Default target for building outside of Eclipse -->
        <target name="standalone" depends="strc,sdf2table,sdf2imp-standalone"/>
        
        <target name="init">
            <mkdir dir="${build}"/>
            <mkdir dir="${dist}"/>
        </target>
        
        <target name="sdf2imp-eclipse" depends="sdf2table">
            <!-- HACK: Trigger the Eclipse builder rather than build it here -->
            <!-- (if we did built it here, we'd have to use the -p option to -->
            <!--  specify the parse table, and put the table in another dir  -->
            <touch file="include/${esvmodule}.packed.esv"/>
            <eclipse.refreshLocal resource="include/${esvmodule}.packed.esv"/>
        </target>
        
        <target name="sdf2imp-standalone" depends="sdf2table">
            <echo message="Only building from within Eclipse is implemented at this time"/>
        </target>
    
        <target name="sdf2table" depends="make-permissive">
            <apply executable="${build.strategoxt}/sdf2table" dest="${dist}" failonerror="true">
                <arg value="-i"/>
                <srcfile/>
                <arg value="-o"/>
                <targetfile/>
                <arg value="-m"/>
                <arg value="${sdfmodule}"/>
                
                <fileset file="include/${sdfmodule}-Permissive.def"/>
                <mapper type="glob" from="*-Permissive.def" to="*.tbl"/>
            </apply>
        </target>
        
        <target name="make-permissive" depends="pack-sdf">
            <dependset>
                <srcfileset    file="include/${sdfmodule}.def"/>
                <targetfileset file="include/${sdfmodule}-Permissive.def"/>
            </dependset>
            <java classname="org.strategoxt.permissivegrammars.make_permissive" classpath="aux/make_permissive.jar:aux/strategoxt.jar" failonerror="true">
                <arg value="-i"/>
                <arg value="${basedir}/include/${sdfmodule}.def"/>
                <arg value="-o"/>
            	<arg value="${basedir}/include/${sdfmodule}-Permissive.def"/>
            </java>
        </target>

        <target name="pack-sdf" depends="init">
            <available property="source-sdf-exists" file="${syntax}/${sdfmodule}.sdf"/>
        	<antcall target="pack-sdf.real"/>
        	<antcall target="pack-sdf.copy"/>
        </target>
    
        <target name="pack-sdf.real" depends="init" if="source-sdf-exists">
            <dependset>
                <srcfilelist dir="${syntax}" files="**/*.sdf"/>
                <targetfileset file="${syntax}/${sdfmodule}.def"/>
            </dependset>
            <apply executable="${build.strategoxt}/pack-sdf" failonerror="true" dest="include">
                <arg value="-i"/>
                <srcfile/>
                <arg value="-o"/>
                <targetfile/>
                <arg value="-I"/>
                <arg value="${trans}"/>
                <arg value="-I"/>
                <arg value="${lib}"/>
                <arg line="${build.strategoxt.sdf.imports}"/>
                
                <fileset file="${syntax}/${sdfmodule}.sdf"/>
                <mapper type="glob" from="*.sdf" to="*.def"/>
            </apply>
        </target>
	
	    <target name="pack-sdf.copy" depends="init" unless="source-sdf-exists">
        	<echo message="Could not find ${syntax}/${sdfmodule}.sdf" level="warning" />
            <copy file="${syntax}/${sdfmodule}.def" todir="include"/>
        </target>
    
        <target name="rtg2sig" depends="init,sdf2rtg">
            <apply executable="${build.strategoxt}/rtg2sig" dest="${build}" failonerror="true">
                <arg value="-i"/>
                <srcfile/>
                <arg value="-o"/>
                <targetfile/>
                
                <fileset file="${syntax}/${sdfmodule}.rtg"/>
                <mapper type="glob" from="*.rtg" to="*.str"/>
            </apply>
        </target>
        
        <target name="sdf2rtg" depends="init,pack-sdf">
            <apply executable="${build.strategoxt}/sdf2rtg" dest="${build}" failonerror="true">
                <arg value="-i"/>
                <srcfile/>
                <arg value="-m"/>
            	<arg value="${sdfmodule}"/>
                <arg value="-o"/>
                <targetfile/>
                
                <fileset file="${syntax}/${sdfmodule}.str"/>
                <mapper type="glob" from="*.def" to="*.rtg"/>
            </apply>
        </target>
    
        <target name="strc" depends="init,rtg2sig" if="strmodule.present">
            <antcall target="strc-call">
                <param name="build.strategoxt.strc.params" value=""/>
                <param name="build.strategoxt.strc.extension" value="*"/>
                <param name="strcExecutable" value="strc"/>
            </antcall>
        </target>
    
        <target name="strj" depends="init,rtg2sig" if="strmodule.present">
            <antcall target="strc-call">
                <param name="build.strategoxt.strc.params" value=""/>
                <param name="build.strategoxt.strc.extension" value="*.java"/>
                <param name="strcExecutable" value="strj"/>
            </antcall>
        </target>
        
        <target name="strji" depends="init,rtg2sig" if="strmodule.present">
            <antcall target="strc-call">
                <param name="build.strategoxt.strc.params" value="-F --library"/>
                <param name="build.strategoxt.strc.extension" value="*.ctree"/>
                <param name="strcExecutable" value="strc"/>
            </antcall>
        </target>
        
        <target name="strc-call" depends="init,rtg2sig">
            <dependset>
                <srcfilelist dir="${trans}" files="**/*.str"/>
                <srcfilelist dir="${build}" files="**/*.str"/>
                <targetfileset dir="${dist}" includes="**/*"/>
            </dependset>
            <apply executable="${build.strategoxt}/{strcExecutable}" dest="${dist}" failonerror="true">
                <arg value=".str"/>
                <arg value="-i"/>
                <srcfile/>
                <arg value="-o"/>
                <targetfile/>
                <arg value="-m"/>
                <arg value="-S"/> <!-- (Silent mode) -->
                <arg value="-I"/>
                <arg value="${trans}"/>
                <arg value="-I"/>
                <arg value="${build}"/>
                <arg value="-I"/>
                <arg value="${lib}"/>
                <arg value="-I"/>
                <arg value="${user.home}/.nix-profile/share/java-front"/>
                <arg value="-la"/>
                <arg value="stratego-lib"/>
                <arg value="-la"/>
                <arg value="${user.home}/.nix-profile/lib/libjava-front.la"/>
                <arg value="-la"/>
                <arg value="stratego-sglr"/>
                <arg value="-la"/>
                <arg value="stratego-gpp"/>
                <arg value="-la"/>
                <arg value="stratego-xtc"/>
                
                <arg line="${build.strategoxt.strc.params}"/>
                <arg line="${build.strategoxt.strc.imports}"/>
                
                <fileset file="${trans}/${strmodule}.str"/>
                <mapper type="glob" from="*.str" to="${build.strategoxt.strc.extension}"/>
            </apply>
            
            <!-- Remove any intermediate files -->
            <delete>
                <fileset dir="${dist}">
                    <include name="**/*.c"/>
                    <include name="**/*.dep"/>
                    <include name="**/*.lo"/>
                    <include name="**/*.o"/>
                </fileset>
            </delete>
        </target>
        
        <target name="clean" description="clean up">
            <delete dir="${build}"/>
        </target>
    </project>
    <%
