module sdf2imp/project/create-parse-table

imports
  libstratego-lib
  libstratego-xtc
  
  EditorService
  
  sdf2imp/project/-
  sdf2imp/services/-
  sdf2imp/util/-
  sdf2imp/lib/-

strategies
  
  copy-or-create-parse-table =
    copy-parse-table <+ xtc-ensure-file; create-parse-table <+ err(|"Could not copy or create parse table")
  
  copy-parse-table =
    where(
      <eq> (<ParseTable>, <parse-table-target; file-exists>)
    <+
      ParseTable;
      if file-exists then
        print-filename(|[], <parse-table-target>);
        <copy-file> (<id>, <parse-table-target>)
      end
    )
    
  create-parse-table:
    FILE(input) -> FILE(output)
    with
      FILE(input') := <create-permissive-grammar> FILE(input);
      output       := <parse-table-target>;
      print-filename(|[], output);
      <file-exists <+ mkdir> "include";
      <xtc-command(!"sdf2table")> ["-i", input', "-o", output, "-m", <get-sdf-main-module>]
  
  create-permissive-grammar:
    FILE(input) -> FILE(output)
    with
      output := <permissive-grammar-target>;
      print-filename(|[], output);
      args   := ["-i", input, "-o", output];
      if-java-platform(
        <call> ("org.strategoxt.permissivegrammars.main-make-permissive", args)
      );
      if-c-platform(  // FIXME: should we even bother making make-permissive an xtc executable?
        <call> ("make-permissive", args)
      )
    <+
      warn(|"Could not create permissive grammar using make-permissive");
      output := input

  permissive-grammar-target =
    <conc-strings> ("include/", <get-sdf-main-module>, "-Permissive.gendef")

  parse-table-target =
    <conc-strings> ("include/", <get-sdf-main-module>, ".tbl")
