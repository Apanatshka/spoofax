%% Templates that were used to generate the completion templates in the EditorService-Completions.esv file.
%% Not intended as a full language description since some .sdf details are not covered 
templates

  Section.Builders = <
    builders
    
      <BuilderRule*>
  >
  Section.Refactorings = <
    refactorings
    
      <RefactoringRule*>
  >
  Section.Colorer = <
    colorer
    
      <ColorRule*>
  >
  Section.Folding = <
    folding
    
      <FoldingRule*>
  >
  Section.Outliner = <
    outliner
    
      <OutlineRule*>
  >
  Section.Completions = <
    completions
    
      <CompletionRule*>
  >
  Section.Language = <
    language
    
      <LanguageProperty*>
  >
  Section.References = <
    references
    
      <ReferenceRule*>
  >
  Section.KeyBindings = <
    keybindings
    
      <KeyBinding*>
  >
  
  
  RefactoringRule.PrettyPrint = <
    pretty-print : <StrategoCall>
  >
  RefactoringRule.Parenthesize = <
    parenthesize : <StrategoCall>
  >
  RefactoringRule.OverrideReconstruction = <
    override reconstruction : <StrategoCall>
  >
  RefactoringRule.Resugar = <
    resugar : <StrategoCall>
  >
  RefactoringRule.Refactoring = <
    refactoring <SemanticNode*> : <String> = <StrategoCall> <BuilderOption*> <UIOption*>
  >
  UIOption.Shortcut = <
    shortcut : <KeyCombination>
  >
  UIOption.Shortcut = <
    shortcut : <InteractionId>
  >
  InteractionId.InteractionId = <<String>>
  UIOption.UserInput = <
    input <InputField+>
  >
  InputField.IdInputField = <
    identifier : <String> = <String>
  >
  InputField.IdInputField = <
    identifier : <String>
  >
  InputField.TextInputField = <
    text : <String> = <String>
  >
  InputField.TextInputField = <
    text : <String>
  >
  InputField = <
    boolean : <String>
  > 
  InputField.BooleanInputField = <
    boolean : <String> = <BooleanValue>
  > 
  BooleanValue.TrueValue = <true>
  BooleanValue.FalseValue = <false>
  KeyBinding.KeyBinding = <
    <KeyCombination> = <String>
  >
  KeyCombination.KeyCombination = <<Key+; separator="+">>
  
  
  BuilderRule.SemanticObserver = <
    observer : <StrategoCall> <ObserverOption*>
  >
  BuilderRule.SemanticProvider = <
    provider : <PropertyValue>
  >
  BuilderRule.OnSave = <
    on save : <StrategoCall> <OnSaveAnno>
  >
  BuilderRule.Builder = <
    builder <SemanticNode*> : <String> = <StrategoCall> <BuilderOption*>
  >
  BuilderRule.BuilderCaption = <
    builder caption : <PropertyValue>
  >
  ObserverOption.MultiFile = <(multifile)>
  BuilderOption.OpenEditor = <(openeditor)>
  BuilderOption.RealTime = <(realtime)>
  BuilderOption.Persistent = <(persistent)>
  BuilderOption.Meta = <(meta)>
  BuilderOption.Cursor = <(cursor)>
  BuilderOption.Source = <(source)>



  CompletionRule.CompletionTrigger = <
    completion trigger : <PropertyValue> <OptCompletionAnno>
  >
  CompletionRule.CompletionProposer = <
    completion proposer : <StrategoCall>
  >
  CompletionRule.CompletionKeyword = <
    completion keyword : <PropertyValue> <OptCompletionAnno>
  >
  CompletionRule.CompletionTemplateEx = <
    completion template <Sort*> : <CompletionPrefix> 
      <CompletionPart+> <CompletionAnno*>
  >
  CompletionPrefix.NoCompletionPrefix = <>
  CompletionPrefix.CompletionPrefix = <<String>>
  CompletionPart = <<String>>
  CompletionPart.Placeholder = <<Placeholder>>
  CompletionPart.Cursor = <(cursor)>
  OptCompletionAnno.None = <>
  OptCompletionAnno = <<CompletionAnno>>
  CompletionAnno.Disable = <(disabled)>
  CompletionAnno.Blank = <(blank)>
  CompletionAnno.Linked = <(linked)>



  ReferenceRule.ReferenceRule = <
    reference <SemanticNode> : <StrategoCall>
  >
  ReferenceRule.HoverRule = <
    hover <SemanticNode> : <StrategoCall>
  >
  ReferenceRule.OccurrenceRule = <
    occurrence <SemanticNode> : <StrategoCall>
  >



  ColorRule.ColorRuleAll = <
    environment <ColorNode> : <Attribute>
  >
  ColorRule.ColorRule = <
    <ColorNode> : <Attribute>
  >
  ColorRule.ColorRuleAllNamed = <
    environment <ColorNode> : <String> = <Attribute>
  >
  ColorRule.ColorRuleNamed = <
    <ColorNode> : <String> = <Attribute>
  >
  Attribute.Attribute = <<Color> <MaybeColor> <Font>>
  Attribute.AttributeRef = <<AttributeId>>
  ColorNode = <<Node>>
  ColorNode.Token = <<TokenKindName>>
  ColorNode.Literal = <token <Id>>
  TokenKindName.TK_IDENTIFIER = <identifier>
  TokenKindName.TK_NUMBER = <number>
  TokenKindName.TK_LAYOUT = <layout>
  TokenKindName.TK_STRING = <string>
  TokenKindName.TK_KEYWORD = <keyword>
  TokenKindName.TK_OPERATOR = <operator>
  TokenKindName.TK_VAR = <var>
  TokenKindName.TK_ERROR = <error>
  TokenKindName.TK_UNKNOWN = <unknown>
  Font.NORMAL = <>
  Font.BOLD = <bold>
  Font.ITALIC = <italic>
  Font.BOLD_ITALIC = <bold italic>
  Font.BOLD_ITALIC = <italic bold>
  Color.ColorDefault = <_>
  Color.ColorRGB = <<Int> <Int> <Int>>
  NoColor.NoColor = <>
  MaybeColor = <<Color>>
  MaybeColor = <<NoColor>>
  ColorRule.ColorDef = <
    <AttributeId> = <Attribute>
  >
  AttributeId = <<Id>>
  AttributeId = <<String>>



  OutlineRule.OutlineRule = <
    <Node>
  >
  FoldingRule.FoldRule = <
    <Node> <FoldingAnno>
  >
  FoldingRule.FoldRuleAll = <
    all <Node> <FoldingAnno>
  >
  FoldingAnno.Disable = <(disabled)>
  FoldingAnno.Folded = <(folded)>
  FoldingAnno.None = <>


  SemanticNode = <<Node>>
  StrategoCall.Strategy = <<StrategoId>>
  StrategoCall.Attribute = <id.<StrategoId>>
  OnSaveAnno.None = <>
  PropertyValues.Values = <<PropertyValue*; separator=",">>
  PropertyValue = <<String>>


  LanguageProperty.LanguageName = <
    name: <PropertyValue>
  >
  LanguageProperty.LanguageId = <
    id: <PropertyValue>
  >
  LanguageProperty.Extensions = <
    extensions: <PropertyValues>
  >
  LanguageProperty.Description = <
    description: <PropertyValue>
  >
  LanguageProperty.Table = <
    table: <PropertyValue>
  >
  LanguageProperty.TableProvider = <
    table provider: <StrategoCall>
  >
  LanguageProperty.StartSymbols = <
    start symbols: <Sort*>
  >
  LanguageProperty.StartSymbols = <
    start symbols: <PropertyValues>
  >
  LanguageProperty.URL = <
    url: <URL>
  >
  LanguageProperty.Extends = <
    extends: <PropertyValues>
  >
  LanguageProperty.Aliases = <
    aliases: <PropertyValues>
  >
  LanguageProperty.UnmanagedTablePrefix = <
    unmanaged table: <Id>*
  >
  LanguageProperty.Disambiguator = <
    disambiguator: <StrategoCall>
  >
  LanguageProperty.FlattenUnicode = <
    unicode flatten: <TrueOrFalse>
  >
  LanguageProperty.LineCommentPrefix = <
    line comment: <PropertyValue>
  >
  LanguageProperty.BlockCommentDefs = <
    block comment: <BlockCommentDef>
  >
  LanguageProperty.FenceDefs = <
    fences: <FenceDef*>
  >
  LanguageProperty.IndentDefs = <
    indent after: <IndentDef*>
  >
  LanguageProperty.IdentifierLexical = <
    identifier lexical: <PropertyValue>
  >


  BlockCommentDef.BlockCommentDef = <<PropertyValue> <PropertyValue> <PropertyValue>>
  BlockCommentDef.BlockCommentDef = <<PropertyValue> <NoContinuation> <PropertyValue>>
  NoContinuation.NoContinuation = <>
  FenceDef.FenceDef = <<PropertyValue> <PropertyValue>>
  IndentDef.IndentDef = <<PropertyValue>>

  TrueOrFalse.True = <true>
  TrueOrFalse.False = <false>

  Sort.Sort = <<Id>>
  Sort.ListSort = <<Id> *>
  String.String = <<STRING>>
  Sort = <<Sort>._>
  Constructor.ConstructorOnly = <_.<ConstructorId>>
  ConstructorId.Constructor = <<Id>>
  Node = <<Sort>>
  Node = <<Constructor>>
  Node.SortAndConstructor = <<Sort>.<ConstructorId>>
  Node = <<ReservedName>>
  ModuleName = <<ReservedName>> 
  Module.Module = <
    module <ModuleName>  
       
    <Imports> <Section*>
  >
  Imports.Imports = <
    imports 
      <Import+>
  >
  Imports.NoImports = <>
  Import.Import = <<ModuleName>>
  Import.ImportRenamed = <<ModuleName> [ <Id> ]>