module CompletionsService

imports
  SemanticServices

exports

  sorts
    CompletionPart CompletionAnno

  syntax
  
    "completions" <SectionName-LEX> <LAYOUT?-CF> <SemanticRule*-CF> -> <Section-CF> {cons("Completions")}

    "completions" -> <ReservedName-CF>

  context-free syntax

    "completion" "proposer" ":" StrategoCall -> SemanticRule {cons("CompletionProposer")}

    "completion" "lexical" ":" PropertyValue -> SemanticRule {cons("IdentifierLexical"), deprecated("Use 'identifier lexical' instead")}

    "identifier" "lexical" ":" PropertyValue -> SemanticRule {cons("IdentifierLexical")}

    "completion" "keyword" ":" PropertyValue CompletionAnno -> SemanticRule {cons("CompletionKeyword")}
    
    "completion" "template" ":" String CompletionPart+ CompletionAnno -> SemanticRule {cons("CompletionTemplate")}
    
    %% Deprecated: conflicts with content completion
    "completion" "template" ":" PropertyValue CompletionPart+ CompletionAnno -> SemanticRule {cons("CompletionTemplate"), avoid, deprecated("Add quotes to the starting literal")}
    
    "completion" "template" ":" Sort "=" String CompletionPart+ CompletionAnno -> SemanticRule {cons("CompletionTemplateWithSort")}

    "completion" "trigger" ":" PropertyValue CompletionAnno -> SemanticRule {cons("CompletionTrigger")}
  
  context-free syntax
  
    "completions" -> StrategoCall {reject}
    "completion"  -> StrategoCall {reject}
    "identifier"  -> StrategoCall {reject}
    "observer"    -> StrategoCall {reject}
    "builder"     -> StrategoCall {reject}
    "occurrence"  -> StrategoCall {reject}
    ReservedName  -> StrategoCall {reject}
    
    String      -> CompletionPart
    Placeholder -> CompletionPart {cons("Placeholder")}

                 -> CompletionAnno {cons("None")}
    "(disabled)" -> CompletionAnno {cons("Disable")}
    "(disable)"  -> CompletionAnno {cons("Disable"), deprecated("Use (disabled) instead")}
    "(blank)"    -> CompletionAnno {cons("Blank")}
    "(blank)"    -> PropertyValue {reject}
    "(disable)"  -> PropertyValue {reject}
    "completion" -> PropertyValue {reject}
    "identifier" -> PropertyValue {reject}

  lexical syntax
    
    "<" PlaceholderChar* ">" -> Placeholder
    ~[\>\n]                  -> PlaceholderChar
    