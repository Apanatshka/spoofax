package org.metaborg.spoofax.core.processing;

import java.io.IOException;
import java.util.Set;

import org.apache.commons.vfs2.FileName;
import org.apache.commons.vfs2.FileObject;
import org.metaborg.spoofax.core.analysis.AnalysisFileResult;
import org.metaborg.spoofax.core.analysis.AnalysisResult;
import org.metaborg.spoofax.core.messages.IMessage;
import org.metaborg.spoofax.core.syntax.ParseException;
import org.metaborg.spoofax.core.syntax.ParseResult;
import org.metaborg.spoofax.core.transform.TransformResult;

/**
 * Output generated by a build.
 * 
 * @param <P>
 *            Type of parsed fragments.
 * @param <A>
 *            Type of analyzed fragments.
 * @param <T>
 *            Type of transformed fragments.
 */
public class BuildOutput<P, A, T> {
    /**
     * Resources that were removed prior to the build.
     */
    public final Set<FileName> removedResources;

    /**
     * Resources that were added or changed prior to the build.
     */
    public final Iterable<FileObject> changedResources;

    /**
     * Parse results for changed resources. If parsing fails exceptionally by a {@link ParseException} or
     * {@link IOException}, there is no parse result for that resource.
     */
    public final Iterable<ParseResult<P>> parseResults;

    /**
     * Analysis results for changed resources. Resources that could not be parsed are not analyzed. Resources in the
     * same context are analyzed together and create a single analysis result.
     */
    public final Iterable<AnalysisResult<P, A>> analysisResults;

    /**
     * Transformation results for changed resources. Resources that could not be parsed or analyzed, or that do not
     * require compilation, are not transformed.
     */
    public final Iterable<TransformResult<AnalysisFileResult<P, A>, T>> transformResults;

    /**
     * Extra messages generated by exceptions.
     */
    public final Iterable<IMessage> extraMessages;


    public BuildOutput(Set<FileName> removedResources, Iterable<FileObject> changedResources,
        Iterable<ParseResult<P>> parseResults, Iterable<AnalysisResult<P, A>> analysisResults,
        Iterable<TransformResult<AnalysisFileResult<P, A>, T>> transformResults, Iterable<IMessage> extraMessages) {
        this.removedResources = removedResources;
        this.changedResources = changedResources;
        this.parseResults = parseResults;
        this.analysisResults = analysisResults;
        this.transformResults = transformResults;
        this.extraMessages = extraMessages;
    }
}
